name: Deploy Azure Function App & Resources

on:
  push:
    branches: ["master"]

env:
  AZURE_RESOURCE_GROUP: 'triplejb'
  AZURE_FUNCTIONAPP_NAME: 'triplejbfunctionapp'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'backend/src/RealtimeCv.Functions'
  UNIT_TESTS_PACKAGE_PATH: 'backend/tests/RealtimeCv.UnitTests'
  BICEP_PATH: 'template.bicep'
  DOTNET_VERSION: '7.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v3

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Install Bicep CLI'
      uses: azure/setup-bicep@v1
        
    - name: 'Build Bicep Template'
      run: |
        az bicep build --file ${{ env.BICEP_PATH }} --outfile arm/template.json      
        
    - name: 'Deploy ARM Template'
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_CREDENTIALS.subscriptionId }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
        deploymentName: 'triplejb-deployment'
        template: 'arm/template.json'
        mode: Incremental

    - name: 'Setup .NET ${{ env.DOTNET_VERSION }}'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Build Functions'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
        
    - name: 'Test .NET'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet test --no-build
        popd

    - name: 'Deploy Functions'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        
