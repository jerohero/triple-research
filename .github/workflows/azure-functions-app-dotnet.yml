name: Deploy Azure Function App

on:
  push:
    branches: ["master"]

env:
  AZURE_RESOURCE_GROUP: 'realtimecv'
  AZURE_FUNCTIONAPP_NAME: 'rcvfunctions'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './backend/src/RealtimeCv.Functions'
  UNIT_TESTS_PACKAGE_PATH: 'backend/tests/RealtimeCv.UnitTests'
  BICEP_PATH: 'template.bicep'
  DOCKER_REGISTRY: 'rcvacr.azurecr.io' 
  DOTNET_VERSION: '7.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v3

#     - name: Deploy Bicep Template
#       uses: azure/CLI@v1
#       with:
#         azcliversion: 2.30.0
#         inlineScript: |
#           az deployment group create \
#             --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
#             --template-file ${{ env.BICEP_PATH }} \
#             --parameters location=westeurope \
#                          storageAccountName=triplejbstorage \
#                          sqlServerName=triplejbdbserver \
#                          sqlDatabaseName=tripjedbdb \
#                          blobContainerNameModel=trained-model \
#                          queueNameStreamPollChunk=stream-poll-chunk \
#                          functionAppName=triplejbfunctions \
#                          webPubSubName=triplejbpubsub \
#                          sqlServerAdminLogin=admin \
#                          sqlServerAdminLoginPassword=${{ secrets.SQL_SERVER_ADMIN_PASSWORD }}

    - name: 'Setup .NET ${{ env.DOTNET_VERSION }}'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

#     - name: 'Build Functions'
#       shell: bash
#       run: |
#         pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
#         dotnet publish --configuration Release --output ./publish
#         popd

#     - name: Install Azure CLI
#       run: |
#         curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

#     - name: 'Login via Azure CLI'
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Login to Azure Container Registry'
      uses: azure/container-actions/login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: rcvacr
        password: At/n/+KBT2z5fWq779aI4pvoyPuYXrRWSm/KqfibzO+ACRBE0CJd

    - name: 'Build and push Docker image'
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/src/RealtimeCv.Functions/Dockerfile
        push: true
        tags: ${{ env.DOCKER_REGISTRY }}/${{ env.AZURE_FUNCTIONAPP_NAME }}:${{ github.sha }}
        build-args: |
          BASE_IMAGE=mcr.microsoft.com/azure-functions/dotnet-isolated:4-dotnet-isolated7.0
          PUBLISH_FOLDER=/app/publish
          
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
#     - name: 'Test .NET'
#       shell: bash
#       run: |
#         pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
#         dotnet test --no-build
#         popd

#     - name: 'Deploy Functions'
#       uses: azure/webapps-deploy@v2
#       with:
#         app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
#         publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
#         package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/publish'

    - name: 'Deploy Functions'
      run: |
        az functionapp config container set \
          --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --image ${{ env.DOCKER_REGISTRY }}/${{ env.AZURE_FUNCTIONAPP_NAME }}:${{ github.sha }} \
          --registry-server https://${{ env.DOCKER_REGISTRY }}
          --registry-username rcvacr
          --registry-password At/n/+KBT2z5fWq779aI4pvoyPuYXrRWSm/KqfibzO+ACRBE0CJd

